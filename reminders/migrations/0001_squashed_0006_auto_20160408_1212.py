# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2016-04-08 12:36
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    replaces = [('reminders', '0001_initial'), ('reminders', '0002_auto_20160408_1151'), ('reminders', '0003_contact_claimees'), ('reminders', '0004_auto_20160408_1210'), ('reminders', '0005_auto_20160408_1211'), ('reminders', '0006_auto_20160408_1212')]

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('phone', models.CharField(max_length=100)),
                ('nextReminder', models.DateTimeField()),
                ('frequency', models.DurationField()),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator(regex='^(\\+\\d{1,2}\\s)?\\(?\\d{3}\\)?[\\s.-]?\\d{3}[\\s.-]?\\d{4}$')])),
                ('smsVerifyCode', models.IntegerField(blank=True, null=True)),
                ('contacts', models.ManyToManyField(blank=True, to=b'reminders.Contact')),
            ],
        ),
        migrations.AddField(
            model_name='contact',
            name='claimees',
            field=models.ManyToManyField(blank=True, to=b'reminders.Person'),
        ),
        migrations.AlterField(
            model_name='contact',
            name='phone',
            field=models.CharField(max_length=100, validators=[django.core.validators.RegexValidator(regex='^(\\+\\d{1,2}\\s)?\\(?\\d{3}\\)?[\\s.-]?\\d{3}[\\s.-]?\\d{4}$')]),
        ),
    ]
